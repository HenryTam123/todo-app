[{"C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\index.js":"1","C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\App.js":"2","C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\reportWebVitals.js":"3","C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\Sidebar.js":"4","C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\MainBody.js":"5","C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\axios.js":"6"},{"size":478,"mtime":1611565017212,"results":"7","hashOfConfig":"8"},{"size":224,"mtime":1611582159124,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":4729,"mtime":1611590299857,"results":"11","hashOfConfig":"8"},{"size":5773,"mtime":1611653443771,"results":"12","hashOfConfig":"8"},{"size":182,"mtime":1611654061058,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11giha2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\index.js",[],["29","30"],"C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\App.js",[],"C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\reportWebVitals.js",[],"C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\Sidebar.js",["31"],"import React, {useState} from 'react'\r\nimport {Avatar, IconButton, ListItem, ListItemIcon, ListItemLink, ListItemText} from '@material-ui/core'\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nconst Sidebar = () => {\r\n\r\n    const [display, setDisplay] = useState(true)\r\n\r\n    return (\r\n        <div className=\"sidebar-container\" style={{flex: display? \"1\" : '0.2', minWidth: display? \"200px\": \"100px\"}}>\r\n          <div className=\"sidebar-wrapper\" style={{flex: display? \"1\" : '0.2', minWidth: display? \"200px\": \"100px\"}}>\r\n          <div className=\"sidebar-header\">\r\n            <IconButton  color=\"inherit\" aria-label=\"menu\">\r\n                <MenuIcon onClick={()=> setDisplay(!display)}/>\r\n            </IconButton>\r\n            {\r\n                display ? <div>\r\n                <IconButton>            \r\n                    <Avatar></Avatar>\r\n                </IconButton> \r\n                 </div>: \"\"\r\n            }\r\n            </div>\r\n            <div className=\"sidebar-list\">\r\n            <ListItem button className=\"list-button\">\r\n                <ListItemIcon style={{\"color\":\"#eeeeee\"}}>\r\n                  <HomeIcon />\r\n                </ListItemIcon>\r\n                {display ? <ListItemText className=\"list-text \"primary=\"Home\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n            </ListItem>\r\n            <ListItem button className=\"list-button\">\r\n                <ListItemIcon style={{\"color\":\"#eeeeee\"}}>\r\n                  <InboxIcon />\r\n                </ListItemIcon>\r\n                {display ? <ListItemText primary=\"Inbox\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n\r\n            </ListItem>\r\n            <ListItem button className=\"list-button\" >\r\n                <ListItemIcon style={{\"color\":\"#eeeeee\"}}>\r\n                  <TodayIcon />\r\n                </ListItemIcon>\r\n                {display ? <ListItemText primary=\"Today\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n            </ListItem> \r\n            <ListItem button className=\"list-button\">\r\n                <ListItemIcon style={{\"color\":\"#eeeeee\"}}>\r\n                  <SendIcon />\r\n                </ListItemIcon>\r\n                {display ? <ListItemText primary=\"Mail\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n            </ListItem>\r\n            <ListItem button className=\"list-button\">\r\n                <ListItemIcon style={{\"color\":\"#eeeeee\"}}>\r\n                  <PeopleAltIcon />\r\n                </ListItemIcon>\r\n                {display ? <ListItemText primary=\"Friends\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n            </ListItem>  \r\n            <ListItem button className=\"list-button\">\r\n                <ListItemIcon>\r\n                  <CalendarTodayIcon style={{\"color\":\"#eeeeee\"}}/>\r\n                </ListItemIcon>\r\n                {display ? <ListItemText primary=\"Calendar\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n            </ListItem>      \r\n            <ListItem button className=\"list-button\">\r\n                <ListItemIcon style={{\"color\":\"#eeeeee\"}}>\r\n                  <SettingsIcon />\r\n                </ListItemIcon>\r\n                {display ? <ListItemText primary=\"Settings\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n            </ListItem>      \r\n            <ListItem button className=\"list-button\">\r\n                <ListItemIcon style={{\"color\":\"#eeeeee\"}}>\r\n                  <SearchIcon />\r\n                </ListItemIcon>\r\n                {display ? <ListItemText primary=\"Search\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n            </ListItem>\r\n            <ListItem button className=\"list-button\">\r\n                <ListItemIcon style={{\"color\":\"#eeeeee\"}}>\r\n                  <AnnouncementIcon />\r\n                </ListItemIcon>\r\n                {display ? <ListItemText primary=\"News\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n            </ListItem>\r\n            <ListItem button className=\"list-button\">\r\n                <ListItemIcon style={{\"color\":\"#eeeeee\"}}>\r\n                  <ExitToAppIcon />\r\n                </ListItemIcon>\r\n                {display ? <ListItemText primary=\"Logout\" style={{\"color\":\"#eeeeee\"}}/> :\"\"}\r\n            </ListItem>          \r\n            </div>\r\n          </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\MainBody.js",["32"],"import React, {useEffect, useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport axios from './axios'\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nconst MainBody = () => {\r\n\r\n    const [todos, setTodos] = useState([])\r\n    const [event, setEvent] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [time, setTime] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [importance, setImportance] = useState('')\r\n\r\n    useEffect( ()=>{        \r\n        axios.get(\"/todos\")\r\n        .then(res=>{\r\n            setTodos(res.data)\r\n            console.log(\"get data\")\r\n            console.log(res.data)\r\n        })\r\n    },[todos])\r\n\r\n    const getData =()=>{\r\n        axios.get(\"/todos\")\r\n        .then(res=>{\r\n            setTodos(res.data)\r\n            console.log(\"get data\")\r\n            console.log(res.data)\r\n        })\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        axios.post('todos/new', {\r\n            event: event,\r\n            description: description,\r\n            time: time,\r\n            date: date,\r\n            importance: importance,\r\n            finish: false\r\n        })  \r\n        .then(()=>{\r\n            setEvent('')\r\n            setDescription('')\r\n            setTime('')\r\n            setDate('')\r\n            setImportance('')\r\n        })\r\n    }\r\n\r\n    const handleClick = async (e) =>{\r\n        if(e.target.innerText === \"NOT FINISHED\"){\r\n            await axios.patch('todos/update', {\r\n                id: e.target.parentNode.parentNode.getAttribute('todo_id'),\r\n                finish: true\r\n            }).then(getData())\r\n        }else{\r\n            await axios.patch('todos/update', {\r\n                id: e.target.parentNode.parentNode.getAttribute('todo_id'),\r\n                finish: false\r\n            }).then(getData())\r\n        }\r\n        \r\n    }\r\n\r\n    const handleDelete = async (e) =>{\r\n        const todoid = e.target.getAttribute('todo_id')\r\n        console.log(todoid)\r\n        await axios.delete('todos/delete', {data:{id: todoid} }, {withCredentials:true})\r\n            .then((res)=> console.log('deleted'))\r\n    }\r\n\r\n    return (\r\n        <div className=\"body-container\">\r\n            <div className=\"add-todo\">\r\n            <RadioGroup aria-label=\"choose\" name=\"choose\" style={{paddingRight:\"30px\"}}>\r\n                <FormControlLabel value=\"default\" control={<Radio color=\"default\" />} label=\"normal\" onChange={(e)=>{setImportance(\"normal\")}}/>\r\n                <FormControlLabel value=\"primary\" control={<Radio color=\"primary\"/>} label=\"important\" onChange={(e)=>{setImportance(\"important\")}}/>\r\n                <FormControlLabel value=\"secondary\" control={<Radio color=\"secondary\"/>} label=\"urgent\" onChange={(e)=>{ setImportance(\"urgent\")}}/>\r\n            </RadioGroup >\r\n                <TextField id=\"standard-basic\" label=\"Event Name\"  value={event} onChange={(e)=>setEvent(e.target.value)}/>\r\n                <TextField id=\"standard-basic\" label=\"Description \"  value={description} onChange={(e)=>setDescription(e.target.value)}/>\r\n                <TextField id=\"standard-basic\" label=\"Date\"   value={date} onChange={(e)=>setDate(e.target.value)}/>\r\n                <TextField id=\"standard-basic\" label=\"Time\"  value={time} onChange={(e)=>setTime(e.target.value)}/>\r\n\r\n            <FormControl component=\"fieldset\">\r\n            </FormControl>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                endIcon={<SendIcon/>}\r\n                style={{margin:\"15px\"}}\r\n                type=\"submit\"\r\n                onClick={handleSubmit}\r\n            >\r\n                Add\r\n            </Button>                     \r\n            </div>\r\n            <div className=\"show-todo\">\r\n                {\r\n                    todos.map(todo=>(\r\n                        <div class=\"todo-card\">\r\n                            <div className= {`card-label ${todo.importance}`}>\r\n                                    <ClearIcon style={{color:\"white\", cursor:\"pointer\"}}  todo_id={`${todo._id}`} onClick={handleDelete}/>                            \r\n                                </div>\r\n                            <div className=\"card-body\" todo_id={todo._id}>\r\n                                <h3>{todo.event}</h3>\r\n                                <p>{todo.description}</p>\r\n                                <p>{`Date: ${todo.date} `}</p>\r\n                                <p>{`Time: ${todo.time} `}</p>  \r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color={todo.finish ? \"primary\" : \"default\"}\r\n                                    endIcon={todo.finish ? <DoneOutlineIcon/> :\"\"}\r\n                                    style={{margin:\"15px\"}}\r\n                                    type=\"submit\"\r\n                                    onClick={handleClick}\r\n                                    \r\n                                >\r\n                                    {todo.finish ? \"Completed \": \"Not finished\"}\r\n                                </Button>                   \r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainBody\r\n","C:\\Users\\gg007\\OneDrive\\桌面\\Todo app\\todo-app\\src\\axios.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":53,"nodeType":"39","messageId":"40","endLine":2,"endColumn":65},{"ruleId":"37","severity":1,"message":"41","line":12,"column":10,"nodeType":"39","messageId":"40","endLine":12,"endColumn":20},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'ListItemLink' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","no-global-assign","no-unsafe-negation"]